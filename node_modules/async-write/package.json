{
  "_from": "async-write@^2.1.0",
  "_id": "async-write@2.1.0",
  "_inBundle": false,
  "_integrity": "sha1-HnYoF9hJzkS/rAeSWkIDZ4cGGxU=",
  "_location": "/async-write",
  "_phantomChildren": {},
  "_requested": {
    "type": "range",
    "registry": true,
    "raw": "async-write@^2.1.0",
    "name": "async-write",
    "escapedName": "async-write",
    "rawSpec": "^2.1.0",
    "saveSpec": null,
    "fetchSpec": "^2.1.0"
  },
  "_requiredBy": [
    "/secure-scuttlebutt"
  ],
  "_resolved": "https://registry.npmjs.org/async-write/-/async-write-2.1.0.tgz",
  "_shasum": "1e762817d849ce44bfac07925a42036787061b15",
  "_spec": "async-write@^2.1.0",
  "_where": "/home/chrx/dev/scuttlebot-release/node_modules/secure-scuttlebutt",
  "author": {
    "name": "'Dominic Tarr'",
    "email": "dominic.tarr@gmail.com",
    "url": "dominictarr.com"
  },
  "bugs": {
    "url": "https://github.com/dominictarr/async-write/issues"
  },
  "bundleDependencies": false,
  "dependencies": {},
  "deprecated": false,
  "description": "a writing strategy that attempts to keep a buffer ready to write at all times. First, a buffer is filled, then it is written and another one is started. If both buffers are full, and the first one is still being written, wait for it to empty, then write the queued one.",
  "devDependencies": {
    "tape": "^4.6.3"
  },
  "homepage": "https://github.com/dominictarr/async-write",
  "license": "MIT",
  "name": "async-write",
  "repository": {
    "type": "git",
    "url": "git://github.com/dominictarr/async-write.git"
  },
  "scripts": {
    "test": "set -e; for t in test/*.js; do node $t; done"
  },
  "version": "2.1.0"
}
